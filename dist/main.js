(()=>{"use strict";var t={904:(t,e,n)=>{n.d(e,{c:()=>d});var o=n(648),i=n.n(o),r=n(312),a=n.n(r)()(i());a.push([t.id,"* {\n    padding: 0;\n    margin: 0;\n}\n\n.sidebar {\n    background-color: aliceblue;\n    width: 30%;\n    padding: 15px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n\n\nbody {\n    display: flex;\n    height: 100vh;\n}\n\n.add-project-btn {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    width: fit-content;\n}\n\n.plus-img\n{\n    height: 1rem;\n\n}\n\n\n/********* DIALOG START ***********/\n\ndialog img {\n    height: 2rem;\n}\n\n.heading_div {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    align-items: center;\n\n    \n}\n\n.heading_div img {\n    margin-left: auto;\n}\n\ndialog {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 15px;\n    border-radius: 20px;\n    gap: 15px;\n\n}\n\n#project-form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.submit-btn {\n    width: 50%;\n    align-self: center;\n    padding: 5px;\n    border-radius: 5px;\n}\n\n\n/********* DIALOG START ***********/\n\n\n/********* CONTENT START **********/\n.content {\n    background-color: white;\n    width: 100%;\n    padding: 15px;\n}\n\n.content-heading-div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n}\n\n#todo-form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n#todo-form div {\n    display: flex;\n    gap: 10px;\n}\n\ninput,\ntextarea {\n    padding: 5px;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,2BAA2B;IAC3B,UAAU;IACV,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;;;AAIA;IACI,aAAa;IACb,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,kBAAkB;AACtB;;AAEA;;IAEI,YAAY;;AAEhB;;;AAGA,mCAAmC;;AAEnC;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,mBAAmB;;;AAGvB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,aAAa;IACb,mBAAmB;IACnB,SAAS;;AAEb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,UAAU;IACV,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;AACtB;;;AAGA,mCAAmC;;;AAGnC,mCAAmC;AACnC;IACI,uBAAuB;IACvB,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;;AAEb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;;IAEI,YAAY;AAChB",sourcesContent:["* {\n    padding: 0;\n    margin: 0;\n}\n\n.sidebar {\n    background-color: aliceblue;\n    width: 30%;\n    padding: 15px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n\n\nbody {\n    display: flex;\n    height: 100vh;\n}\n\n.add-project-btn {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    width: fit-content;\n}\n\n.plus-img\n{\n    height: 1rem;\n\n}\n\n\n/********* DIALOG START ***********/\n\ndialog img {\n    height: 2rem;\n}\n\n.heading_div {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    align-items: center;\n\n    \n}\n\n.heading_div img {\n    margin-left: auto;\n}\n\ndialog {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 15px;\n    border-radius: 20px;\n    gap: 15px;\n\n}\n\n#project-form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.submit-btn {\n    width: 50%;\n    align-self: center;\n    padding: 5px;\n    border-radius: 5px;\n}\n\n\n/********* DIALOG START ***********/\n\n\n/********* CONTENT START **********/\n.content {\n    background-color: white;\n    width: 100%;\n    padding: 15px;\n}\n\n.content-heading-div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n}\n\n#todo-form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n#todo-form div {\n    display: flex;\n    gap: 10px;\n}\n\ninput,\ntextarea {\n    padding: 5px;\n}\n\n"],sourceRoot:""}]);const d=a},312:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",o=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),o&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),o&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,o,i,r){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var s=0;s<t.length;s++){var l=[].concat(t[s]);o&&a[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},648:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(i," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},596:t=>{var e=[];function n(t){for(var n=-1,o=0;o<e.length;o++)if(e[o].identifier===t){n=o;break}return n}function o(t,o){for(var r={},a=[],d=0;d<t.length;d++){var c=t[d],s=o.base?c[0]+o.base:c[0],l=r[s]||0,p="".concat(s," ").concat(l);r[s]=l+1;var A=n(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var m=i(u,o);o.byIndex=d,e.splice(d,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function i(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,i){var r=o(t=t||[],i=i||{});return function(t){t=t||[];for(var a=0;a<r.length;a++){var d=n(r[a]);e[d].references--}for(var c=o(t,i),s=0;s<r.length;s++){var l=n(r[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=c}}},176:t=>{var e={};t.exports=function(t,n){var o=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},808:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},120:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},520:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,i&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},936:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(o){var i=e[o];if(void 0!==i)return i.exports;var r=e[o]={id:o,exports:{}};return t[o](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var o=e.getElementsByTagName("script");if(o.length)for(var i=o.length-1;i>-1&&!t;)t=o[i--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.nc=void 0,(()=>{const t=n.p+"5395da8b16ace3414228.png",e=n.p+"c75555bf2b2ad120510e.svg";function o(n){const o=document.querySelector(".sidebar"),i=document.createElement("h1");i.textContent="My Projects",i.classList="sidebar-title",o.appendChild(i),null!=n&&function(n,o){n.list.forEach((n=>{const i=document.createElement("div");i.setAttribute("class","project"),i.textContent=n.title,i.addEventListener("click",(o=>{console.log(n),document.querySelector(".content").innerHTML="",function(n){const o=document.querySelector(".content"),i=document.createElement("div"),r=document.createElement("div");i.classList="content-heading-div",r.classList="content-todo-div",o.appendChild(i),o.appendChild(r);const a=document.createElement("h1");a.textContent=n.title,i.appendChild(a);const d=document.createElement("div");d.classList="add-project-btn";const c=document.createElement("p");c.textContent="Add Todo";const s=new Image;s.src=t,s.classList="plus-img",d.appendChild(s),d.appendChild(c);const l=document.querySelector(".todo-dialog");d.addEventListener("click",(t=>{l.showModal()})),i.appendChild(d),null!=n.list&&function(t){const n=document.querySelector(".content-todo-div");(new Image).src=e,t.list.forEach((t=>{const e=document.createElement("div");e.classList="todo-card";const o=document.createElement("div"),i=document.createElement("label");i.textContent="Complete: ";const r=document.createElement("input");r.type="checkbox",r.addEventListener("click",(()=>{!0===readButton.checked?e.style.backgroundColor="red":e.style.backgroundColor="darkolivegreen"})),i.appendChild(r),o.appendChild(i),n.appendChild(o);const a=document.createElement("p");a.textContent=`Title: ${t.title}`;const d=document.createElement("p");d.textContent=`Due Date: ${t.dueDate}`;const c=document.createElement("p");c.textContent=`Priority: ${t.priority}`,n.appendChild(a),n.appendChild(d),n.appendChild(c)}))}(n)}(n)})),o.appendChild(i)}))}(n,o);const r=document.createElement("div"),a=document.createElement("p");a.textContent="Add Project",r.classList="add-project-btn",r.addEventListener("click",(t=>{document.querySelector(".project-dialog").showModal()}));const d=new Image;d.src=t,d.classList="plus-img",r.appendChild(d),r.appendChild(a),o.appendChild(r)}const i=class{constructor(t){this.title=t,this.list=[]}set title(t){this._title=t}get title(){return this._title}addTodo(t){this.list.push(t)}removeTodo(t){const e=this.list.indexOf(t);this.list.splice(e,1)}};var r=n(596),a=n.n(r),d=n(520),c=n.n(d),s=n(176),l=n.n(s),p=n(120),A=n.n(p),u=n(808),m=n.n(u),h=n(936),f=n.n(h),C=n(904),b={};b.styleTagTransform=f(),b.setAttributes=A(),b.insert=l().bind(null,"head"),b.domAPI=c(),b.insertStyleElement=m(),a()(C.c,b),C.c&&C.c.locals&&C.c.locals;const g=new class{constructor(t){this.title=t,this.list=[]}set title(t){this._title=t}get title(){return this._title}addProject(t){this.list.push(t)}removeProject(t){const e=this.list.indexOf(t);this.list.splice(e,1)}}("Project List");o(g),function(t){const n=document.querySelector("body"),r=document.createElement("dialog"),a=document.createElement("form");r.setAttribute("class","project-dialog"),a.setAttribute("method","dialog"),a.setAttribute("id","project-form"),r.appendChild(a),n.appendChild(r);const d=document.createElement("div");d.setAttribute("class","heading_div");const c=document.createElement("h1");c.textContent="New project",c.setAttribute("class","form-heading"),d.appendChild(c);const s=new Image;s.src=e,s.addEventListener("click",(t=>{r.close()})),d.appendChild(s),a.appendChild(d);const l=document.createElement("div"),p=document.createElement("label"),A=document.createElement("input");p.setAttribute("for","form-title"),p.textContent="Title: ",A.setAttribute("type","text"),A.setAttribute("id","form-title"),A.setAttribute("name","form-title"),A.required=!0,l.appendChild(p),l.appendChild(A),a.appendChild(l);const u=document.createElement("button");u.textContent="Add Project",u.setAttribute("class","submit-btn"),u.setAttribute("type","submit"),u.addEventListener("click",(e=>{if(""!=a["form-title"].value){e.preventDefault();const n=document.querySelector(".sidebar"),d=new i(a["form-title"].value);t.addProject(d),a.reset(),r.close(),n.innerHTML="",o(t)}})),a.appendChild(u)}(g),function(){const t=document.querySelector("body"),n=document.createElement("dialog");n.setAttribute("class","todo-dialog");const o=document.createElement("form");o.setAttribute("method","dialog"),o.setAttribute("id","todo-form"),n.appendChild(o),t.appendChild(n);const i=document.createElement("div");i.setAttribute("class","heading_div");const r=document.createElement("h1");r.textContent="New Todo",r.setAttribute("class","form-heading"),i.appendChild(r);const a=new Image;a.src=e,a.addEventListener("click",(t=>{n.close()})),i.appendChild(a),o.appendChild(i);const d=document.createElement("div"),c=document.createElement("label");c.textContent="Title: ",c.setAttribute("for","todo-title");const s=document.createElement("input");s.setAttribute("type","text"),s.setAttribute("id","todo-title"),s.setAttribute("name","todo-title"),d.appendChild(c),d.appendChild(s),o.appendChild(d);const l=document.createElement("div"),p=document.createElement("label");p.textContent="Description: ",p.setAttribute("for","todo-description");const A=document.createElement("textarea");A.setAttribute("rows",20),A.setAttribute("cols",50),A.setAttribute("id","todo-description"),A.setAttribute("name","todo-description"),l.appendChild(p),l.appendChild(A),o.appendChild(l);const u=document.createElement("div"),m=document.createElement("label");m.textContent="Due Date: ",m.setAttribute("for","todo-date");const h=document.createElement("input");h.setAttribute("type","datetime-local"),h.setAttribute("id","todo-date"),h.setAttribute("name","todo-date"),u.appendChild(m),u.appendChild(h),o.appendChild(u);const f=document.createElement("div"),C=document.createElement("label");C.textContent="Priority: ",C.setAttribute("for","priority");const b=document.createElement("select");b.setAttribute("name","priority");const g=document.createElement("option");g.textContent="High",g.setAttribute("value","high");const v=document.createElement("option");v.textContent="Medium",v.setAttribute("value","medium");const x=document.createElement("option");x.textContent="Low",x.setAttribute("value","low"),b.appendChild(g),b.appendChild(v),b.appendChild(x),f.appendChild(C),f.appendChild(b),o.appendChild(f);const E=document.createElement("button");E.setAttribute("class","submit-btn"),E.setAttribute("type","submit"),E.textContent="Add Todo",o.appendChild(E)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,