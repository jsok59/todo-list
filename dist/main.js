(()=>{"use strict";var t={904:(t,e,n)=>{n.d(e,{c:()=>d});var i=n(648),o=n.n(i),r=n(312),a=n.n(r)()(o());a.push([t.id,"* {\n    padding: 0;\n    margin: 0;\n}\n\n.sidebar {\n    background-color: aliceblue;\n    width: 30%;\n    padding: 15px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n\n\nbody {\n    display: flex;\n    height: 100vh;\n}\n\n.add-project-btn {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    width: fit-content;\n}\n\n.plus-img\n{\n    height: 1rem;\n\n}\n\n\n/********* DIALOG START ***********/\n\ndialog img {\n    height: 2rem;\n}\n\n.heading_div {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    align-items: center;\n\n    \n}\n\n.heading_div img {\n    margin-left: auto;\n}\n\ndialog {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 15px;\n    border-radius: 20px;\n    gap: 15px;\n\n}\n\n#project-form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.submit-btn {\n    width: 50%;\n    align-self: center;\n    padding: 5px;\n    border-radius: 5px;\n}\n\n\n/********* DIALOG START ***********/\n\n\n/********* CONTENT START **********/\n.content {\n    background-color: white;\n    width: 100%;\n    padding: 15px;\n}\n\n.content-heading-div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n}\n\n#todo-form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n#todo-form div {\n    display: flex;\n    gap: 10px;\n}\n\ninput,\ntextarea {\n    padding: 5px;\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,2BAA2B;IAC3B,UAAU;IACV,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;;;AAIA;IACI,aAAa;IACb,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,kBAAkB;AACtB;;AAEA;;IAEI,YAAY;;AAEhB;;;AAGA,mCAAmC;;AAEnC;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,mBAAmB;;;AAGvB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,aAAa;IACb,mBAAmB;IACnB,SAAS;;AAEb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,UAAU;IACV,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;AACtB;;;AAGA,mCAAmC;;;AAGnC,mCAAmC;AACnC;IACI,uBAAuB;IACvB,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;;AAEb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;;IAEI,YAAY;AAChB",sourcesContent:["* {\n    padding: 0;\n    margin: 0;\n}\n\n.sidebar {\n    background-color: aliceblue;\n    width: 30%;\n    padding: 15px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n\n\nbody {\n    display: flex;\n    height: 100vh;\n}\n\n.add-project-btn {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    width: fit-content;\n}\n\n.plus-img\n{\n    height: 1rem;\n\n}\n\n\n/********* DIALOG START ***********/\n\ndialog img {\n    height: 2rem;\n}\n\n.heading_div {\n    display: flex;\n    flex-direction: row;\n    gap: 40px;\n    align-items: center;\n\n    \n}\n\n.heading_div img {\n    margin-left: auto;\n}\n\ndialog {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    padding: 15px;\n    border-radius: 20px;\n    gap: 15px;\n\n}\n\n#project-form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.submit-btn {\n    width: 50%;\n    align-self: center;\n    padding: 5px;\n    border-radius: 5px;\n}\n\n\n/********* DIALOG START ***********/\n\n\n/********* CONTENT START **********/\n.content {\n    background-color: white;\n    width: 100%;\n    padding: 15px;\n}\n\n.content-heading-div {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n}\n\n#todo-form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n#todo-form div {\n    display: flex;\n    gap: 10px;\n}\n\ninput,\ntextarea {\n    padding: 5px;\n}\n\n"],sourceRoot:""}]);const d=a},312:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,o,r){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(i)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var s=0;s<t.length;s++){var l=[].concat(t[s]);i&&a[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},648:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(o," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},596:t=>{var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var r={},a=[],d=0;d<t.length;d++){var c=t[d],s=i.base?c[0]+i.base:c[0],l=r[s]||0,p="".concat(s," ").concat(l);r[s]=l+1;var A=n(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var m=o(u,i);i.byIndex=d,e.splice(d,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var r=i(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<r.length;a++){var d=n(r[a]);e[d].references--}for(var c=i(t,o),s=0;s<r.length;s++){var l=n(r[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=c}}},176:t=>{var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},808:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},120:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},520:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,o&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},936:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,exports:{}};return t[i](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var i=e.getElementsByTagName("script");if(i.length)for(var o=i.length-1;o>-1&&!t;)t=i[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.nc=void 0,(()=>{const t=class{constructor(t){this.title=t,this.list=[]}set title(t){this._title=t}get title(){return this._title}addTodo(t){this.list.push(t)}removeTodo(t){const e=this.list.indexOf(t);this.list.splice(e,1)}},e=class{constructor(t,e,n,i){this.title=t,this.description=e,this.dueDate=n,this.priority=i,this.complete=!1}set title(t){this._title=t}get title(){return this._title}set description(t){this._description=t}get descriptione(){return this._description}set dueDate(t){this._dueDate=t}get dueDate(){return this._dueDate}set priority(t){this._priority=t}get priority(){return this._priority}set complete(t){this._complete=t}get complete(){return this._complete}},i=n.p+"5395da8b16ace3414228.png";function o(t){const e=document.querySelector(".sidebar"),n=document.createElement("h1");n.textContent="My Projects",n.classList="sidebar-title",e.appendChild(n),null!=t&&function(t,e){t.list.forEach((t=>{const n=document.createElement("div");n.setAttribute("class","project"),n.textContent=t.title,n.addEventListener("click",(e=>{document.querySelector(".content").innerHTML="",function(t){const e=document.querySelector(".content"),n=document.createElement("div");n.classList="content-heading-div",e.appendChild(n);const o=document.createElement("h1");o.textContent=t.title,n.appendChild(o);const r=document.createElement("div");r.classList="add-project-btn";const a=document.createElement("p");a.textContent="Add Todo";const d=new Image;d.src=i,d.classList="plus-img",r.appendChild(d),r.appendChild(a);const c=document.querySelector(".todo-dialog");r.addEventListener("click",(t=>{c.showModal()})),n.appendChild(r)}(t)})),e.appendChild(n)}))}(t,e);const o=document.createElement("div"),r=document.createElement("p");r.textContent="Add Project",o.classList="add-project-btn",o.addEventListener("click",(t=>{document.querySelector(".project-dialog").showModal()}));const a=new Image;a.src=i,a.classList="plus-img",o.appendChild(a),o.appendChild(r),e.appendChild(o)}const r=n.p+"c75555bf2b2ad120510e.svg";var a=n(596),d=n.n(a),c=n(520),s=n.n(c),l=n(176),p=n.n(l),A=n(120),u=n.n(A),m=n(808),h=n.n(m),f=n(936),C=n.n(f),b=n(904),g={};g.styleTagTransform=C(),g.setAttributes=u(),g.insert=p().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=h(),d()(b.c,g),b.c&&b.c.locals&&b.c.locals;const v=new class{constructor(t){this.title=t,this.list=[]}set title(t){this._title=t}get title(){return this._title}addProject(t){this.list.push(t)}removeProject(t){const e=this.list.indexOf(t);this.list.splice(e,1)}}("Project List"),x=new t("Grading Papers"),I=new t("Lesson Plans"),y=new e("todo1","wasdfa","wfasd",1),E=new e("todo2","wasdfa","wfasd",1);x.addTodo(y),x.addTodo(E),x.removeTodo(y),x.list[0].priority=0,v.addProject(x),v.addProject(I),function(e){const n=document.querySelector("body"),i=document.createElement("dialog"),a=document.createElement("form");i.setAttribute("class","project-dialog"),a.setAttribute("method","dialog"),a.setAttribute("id","project-form"),i.appendChild(a),n.appendChild(i);const d=document.createElement("div");d.setAttribute("class","heading_div");const c=document.createElement("h1");c.textContent="New project",c.setAttribute("class","form-heading"),d.appendChild(c);const s=new Image;s.src=r,s.addEventListener("click",(t=>{i.close()})),d.appendChild(s),a.appendChild(d);const l=document.createElement("div"),p=document.createElement("label"),A=document.createElement("input");p.setAttribute("for","form-title"),p.textContent="Title: ",A.setAttribute("type","text"),A.setAttribute("id","form-title"),A.setAttribute("name","form-title"),A.required=!0,l.appendChild(p),l.appendChild(A),a.appendChild(l);const u=document.createElement("button");u.textContent="Add Project",u.setAttribute("class","submit-btn"),u.setAttribute("type","submit"),u.addEventListener("click",(n=>{if(""!=a["form-title"].value){n.preventDefault();const r=document.querySelector(".sidebar"),d=new t(a["form-title"].value);e.addProject(d),a.reset(),i.close(),r.innerHTML="",o(e)}})),a.appendChild(u)}(v),o(v),function(t){const e=document.querySelector("body"),n=document.createElement("dialog");n.setAttribute("class","todo-dialog");const i=document.createElement("form");i.setAttribute("method","dialog"),i.setAttribute("id","todo-form"),n.appendChild(i),e.appendChild(n);const o=document.createElement("div");o.setAttribute("class","heading_div");const a=document.createElement("h1");a.textContent="New Todo",a.setAttribute("class","form-heading"),o.appendChild(a);const d=new Image;d.src=r,d.addEventListener("click",(t=>{n.close()})),o.appendChild(d),i.appendChild(o);const c=document.createElement("div"),s=document.createElement("label");s.textContent="Title: ",s.setAttribute("for","todo-title");const l=document.createElement("input");l.setAttribute("type","text"),l.setAttribute("id","todo-title"),l.setAttribute("name","todo-title"),c.appendChild(s),c.appendChild(l),i.appendChild(c);const p=document.createElement("div"),A=document.createElement("label");A.textContent="Description: ",A.setAttribute("for","todo-description");const u=document.createElement("textarea");u.setAttribute("rows",20),u.setAttribute("cols",50),u.setAttribute("id","todo-description"),u.setAttribute("name","todo-description"),p.appendChild(A),p.appendChild(u),i.appendChild(p);const m=document.createElement("div"),h=document.createElement("label");h.textContent="Due Date: ",h.setAttribute("for","todo-date");const f=document.createElement("input");f.setAttribute("type","datetime-local"),f.setAttribute("id","todo-date"),f.setAttribute("name","todo-date"),m.appendChild(h),m.appendChild(f),i.appendChild(m);const C=document.createElement("div"),b=document.createElement("label");b.textContent="Priority: ",b.setAttribute("for","priority");const g=document.createElement("select");g.setAttribute("name","priority");const v=document.createElement("option");v.textContent="High",v.setAttribute("value","high");const x=document.createElement("option");x.textContent="Medium",x.setAttribute("value","medium");const I=document.createElement("option");I.textContent="Low",I.setAttribute("value","low"),g.appendChild(v),g.appendChild(x),g.appendChild(I),C.appendChild(b),C.appendChild(g),i.appendChild(C);const y=document.createElement("button");y.setAttribute("class","submit-btn"),y.setAttribute("type","submit"),y.textContent="Add Todo",i.appendChild(y)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,