(()=>{"use strict";var t={904:(t,e,n)=>{n.d(e,{c:()=>c});var i=n(648),o=n.n(i),r=n(312),a=n.n(r)()(o());a.push([t.id,"* {\n    padding: 0;\n    margin: 0;\n}\n\n.sidebar {\n    background-color: aliceblue;\n    height: 100vh;\n    width: 30%;\n    padding: 15px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.content {\n    background-color: white;\n    width: 100%;\n}\n\nbody {\n    display: flex;\n}\n\n.add-project-btn {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    width: fit-content;\n}\n\n.plus-img\n{\n    height: 1rem;\n\n}\n\n\n/********* DIALOG START ***********/\n\ndialog img {\n    height: 2rem;\n}\n\n.heading_div {\n    display: flex;\n    flex-direction: row;\n    gap: 50px;\n    align-items: center;\n    \n}\n\ndialog {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -100%);\n    padding: 15px;\n    border-radius: 20px;\n    gap: 15px;\n}\n\n#project-form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.submit-btn {\n    width: 50%;\n    align-self: center;\n    padding: 5px;\n    border-radius: 5px;\n}\n\n\n/********* DIALOG START ***********/","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,2BAA2B;IAC3B,aAAa;IACb,UAAU;IACV,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,uBAAuB;IACvB,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,QAAQ;IACR,kBAAkB;AACtB;;AAEA;;IAEI,YAAY;;AAEhB;;;AAGA,mCAAmC;;AAEnC;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,mBAAmB;;AAEvB;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,iCAAiC;IACjC,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;AACb;;AAEA;IACI,UAAU;IACV,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;AACtB;;;AAGA,mCAAmC",sourcesContent:["* {\n    padding: 0;\n    margin: 0;\n}\n\n.sidebar {\n    background-color: aliceblue;\n    height: 100vh;\n    width: 30%;\n    padding: 15px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n}\n\n.content {\n    background-color: white;\n    width: 100%;\n}\n\nbody {\n    display: flex;\n}\n\n.add-project-btn {\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    width: fit-content;\n}\n\n.plus-img\n{\n    height: 1rem;\n\n}\n\n\n/********* DIALOG START ***********/\n\ndialog img {\n    height: 2rem;\n}\n\n.heading_div {\n    display: flex;\n    flex-direction: row;\n    gap: 50px;\n    align-items: center;\n    \n}\n\ndialog {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -100%);\n    padding: 15px;\n    border-radius: 20px;\n    gap: 15px;\n}\n\n#project-form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.submit-btn {\n    width: 50%;\n    align-self: center;\n    padding: 5px;\n    border-radius: 5px;\n}\n\n\n/********* DIALOG START ***********/"],sourceRoot:""}]);const c=a},312:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,o,r){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(i)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var d=0;d<t.length;d++){var l=[].concat(t[d]);i&&a[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},648:t=>{t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(o," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},596:t=>{var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var r={},a=[],c=0;c<t.length;c++){var s=t[c],d=i.base?s[0]+i.base:s[0],l=r[d]||0,p="".concat(d," ").concat(l);r[d]=l+1;var u=n(p),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(A);else{var m=o(A,i);i.byIndex=c,e.splice(c,0,{identifier:p,updater:m,references:1})}a.push(p)}return a}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var r=i(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<r.length;a++){var c=n(r[a]);e[c].references--}for(var s=i(t,o),d=0;d<r.length;d++){var l=n(r[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=s}}},176:t=>{var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},808:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},120:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},520:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,o&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},936:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(i){var o=e[i];if(void 0!==o)return o.exports;var r=e[i]={id:i,exports:{}};return t[i](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var i=e.getElementsByTagName("script");if(i.length)for(var o=i.length-1;o>-1&&!t;)t=i[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.nc=void 0,(()=>{const t=class{constructor(t){this.title=t,this.list=[]}set title(t){this._title=t}get title(){return this._title}addTodo(t){this.list.push(t)}removeTodo(t){const e=this.list.indexOf(t);this.list.splice(e,1)}},e=class{constructor(t,e,n,i){this.title=t,this.description=e,this.dueDate=n,this.priority=i,this.complete=!1}set title(t){this._title=t}get title(){return this._title}set description(t){this._description=t}get descriptione(){return this._description}set dueDate(t){this._dueDate=t}get dueDate(){return this._dueDate}set priority(t){this._priority=t}get priority(){return this._priority}set complete(t){this._complete=t}get complete(){return this._complete}},i=n.p+"5395da8b16ace3414228.png";function o(t){const e=document.querySelector(".sidebar"),n=document.createElement("h1");n.textContent="My Projects",n.classList="sidebar-title",e.appendChild(n),null!=t&&function(t,e){t.list.forEach((t=>{const n=document.createElement("div");n.setAttribute("class","project"),n.textContent=t.title,n.addEventListener("click",(e=>{document.querySelector(".content").innerHTML="",function(t){const e=document.querySelector(".content"),n=document.createElement("div");n.classList="content-heading-div",e.appendChild(n);const o=document.createElement("h1");o.textContent=t.title,n.appendChild(o);const r=document.createElement("div");r.classList="add-project-btn";const a=document.createElement("p");a.textContent="Add Todo";const c=new Image;c.src=i,c.classList="plus-img",r.appendChild(c),r.appendChild(a);const s=document.querySelector(".todo-dialog");r.addEventListener("click",(t=>{s.showModal()})),e.appendChild(r)}(t)})),e.appendChild(n)}))}(t,e);const o=document.createElement("div"),r=document.createElement("p");r.textContent="Add Project",o.classList="add-project-btn",o.addEventListener("click",(t=>{document.querySelector(".project-dialog").showModal()}));const a=new Image;a.src=i,a.classList="plus-img",o.appendChild(a),o.appendChild(r),e.appendChild(o)}const r=n.p+"c75555bf2b2ad120510e.svg";var a=n(596),c=n.n(a),s=n(520),d=n.n(s),l=n(176),p=n.n(l),u=n(120),A=n.n(u),m=n(808),h=n.n(m),f=n(936),g=n.n(f),b=n(904),C={};C.styleTagTransform=g(),C.setAttributes=A(),C.insert=p().bind(null,"head"),C.domAPI=d(),C.insertStyleElement=h(),c()(b.c,C),b.c&&b.c.locals&&b.c.locals;const v=new class{constructor(t){this.title=t,this.list=[]}set title(t){this._title=t}get title(){return this._title}addProject(t){this.list.push(t)}removeProject(t){const e=this.list.indexOf(t);this.list.splice(e,1)}}("Project List"),y=new t("hi"),x=new t("Basketball"),I=new e("todo1","wasdfa","wfasd",1),E=new e("todo2","wasdfa","wfasd",1);y.addTodo(I),y.addTodo(E),y.removeTodo(I),y.list[0].priority=0,v.addProject(y),v.addProject(x),function(e){const n=document.querySelector("body"),i=document.createElement("dialog"),a=document.createElement("form");i.setAttribute("class","project-dialog"),a.setAttribute("method","dialog"),a.setAttribute("id","project-form"),i.appendChild(a),n.appendChild(i);const c=document.createElement("div");c.setAttribute("class","heading_div");const s=document.createElement("h1");s.textContent="New project",s.setAttribute("class","form-heading"),c.appendChild(s);const d=new Image;d.src=r,d.addEventListener("click",(t=>{i.close()})),c.appendChild(d),a.appendChild(c);const l=document.createElement("div"),p=document.createElement("label"),u=document.createElement("input");p.setAttribute("for","form-title"),p.textContent="Title: ",u.setAttribute("type","text"),u.setAttribute("id","form-title"),u.setAttribute("name","form-title"),u.required=!0,l.appendChild(p),l.appendChild(u),a.appendChild(l);const A=document.createElement("button");A.textContent="Add Project",A.setAttribute("class","submit-btn"),A.setAttribute("type","submit"),A.addEventListener("click",(n=>{if(""!=a["form-title"].value){n.preventDefault();const r=document.querySelector(".sidebar"),c=new t(a["form-title"].value);e.addProject(c),a.reset(),i.close(),r.innerHTML="",o(e)}})),a.appendChild(A)}(v),o(v),function(t){const e=document.querySelector("body"),n=document.createElement("dialog");n.setAttribute("class","todo-dialog");const i=document.createElement("form");i.setAttribute("method","dialog"),i.setAttribute("id","todo-form"),n.appendChild(i),e.appendChild(n);const o=document.createElement("label");o.setAttribute("for","todo-title");const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","todo-title"),r.setAttribute("name","todo-title"),i.appendChild(o),i.appendChild(r)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,